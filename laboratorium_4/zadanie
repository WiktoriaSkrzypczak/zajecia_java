/*
zadanie 3 CO ZMIENIONO:
Dodano wers przed wyświetleniem wybranej komórki   tablica_element = tablica_element - 1;
Poprzednia wersja bez sprawdzenia pokazywała element o jeden w prawo niż ten podany przez użytkownika
Działo się tak dlatego, że zapomniałam, że startowym elementem tablicy jest element oznaczony 0, a nie 1
Dlatego, gdy użytkownik miał np. tablice {1, 2, 3} i wybierał element drugi, to pokazywała mu się liczba 3, 
bo 1 -> 0, 2 -> 1, 3 -> 2. Ponieważ teraz program przed wyświetleniem przyjmuje, że dana komórka do wyświetlenia
to wprowadzona liczba minus jeden, to teraz program powinien wyświetlać się już poprawnie. 

zadanie 2
Najpierw umożliwiono wprowadzenie ciągu znaków za pomocą formuły Scanner
Ciąg znaków zostaje zapisany w postaci Stringa
Następnie za pomocą metody Integer.parseInt następuje zmiana wprowadzonego ciągu znaków
Ciąg znaków zostaje przypisany do nowej zmiennej w postaci inta. 
Następnie system wyświetla wiadomość, że dany ciąg znaków został zmieniony ze Stringa na inta
Int jest tylko do liczb, więc w Stringu musi też być wpisana liczba, żeby zadziałało
W przypadku wpisania w Stringu znaku innego niż liczba, to pojawi się błąd
przy użyciu formuły catch (NumberFormatException zly_format) 
z informacją o złym formacie wprowadzonych danych


zadanie 3
Najpierw zaimplementowano funkcję Random, do losowania liczb do tablicy
Stworzono tablicę, z dziesięcioma elementami, z liczbami losowanymi dzięki funkcji Random
Z zakresu  od 1 do 10, następnie zostaje wyświetlona cała  tablica z informacją ile jest w niej elementów.
Za pomocą funkcji Scanner użytkownik wprowadza, który element tablicy ma zostać wyświetlony
Program wyświetla później który nr elementu, który użytkownik chciał wyświetlić 
I dany element także. Jeżeli wpisany zostanie numer spoza tablicy, pojawi się błąd
"java.lang.ArrayIndexOutOfBoundsException", dzięki funkcji "catch", gdy się on pojawi, 
Zostanie wyświetlona informacja o potrzebie wprowadzenie poprawnie danych.



zadanie 4
Stworzono klasę nadrzedną: pozycja, w której utworzono główne zmienne 
i funkcje nadawania/odczytywania przypisanych do zmienncyh danych, tzn. set i get. 
Stworzono klasy i obiekty: audiobooki, ebooki, filmy, książka, płyty muzyczne.
Te klasy korzystały z klasy pozycja, która została zadeklarowana w każdej z nich jako obiekt.
Specjalne zmienne w każdej klasie (te idnywidualne jak np. rodzaj pliku pdf/mobi dla ebooka)
zostały zadeklarowane przy użyciu this.zmienna = jakieś dane. 
Zmienne z klasy nadrzędnej (pozycja) zostały zadeklarowane przy użyciu funkcji set, np. 
pozycja_ebooki.setTytul("Czarna Madonna");
Utworzoną klasę "Kara" pozostawiono bez zmian w postaci funkcji warunkującej ile trzeba zapłacić
oraz wyświetlającą komunikaty na temat czy trzeba oddać/ile dni zostało do oddania wypożyczonej pozycji. 
Klasę panel klienta delikatnie przerobiono, zostawiono jedynie deklarację glówną zmiennych, 
tworzenie obiektu (pierwszy klient) dla tej klasy przeniesiono do klasy "System". 
Klasę System również nieco przerobiono, zadeklarowano obiekty do konkretnych klas. 
Następnie utworzono do każdej z nich zmienne, do których przypisano dane zmiennych z danego obiektu z każdej klasy. 
Dodatkowo dla sprawdzenia, że całość działa system pozwala wyświetlić dane każdego obiektu i ich zmiennych. 
Utworzono listę Biblioteka, do której dodano wszystkie obiekty, jest to przedstawienie całych z zasobów wypożyczalni.

*/
